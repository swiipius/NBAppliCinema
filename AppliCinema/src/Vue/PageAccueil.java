/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vue;

import java.awt.event.*;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.util.*;
import javax.swing.*;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import jdbc2020.*;
import java.net.URL;
import java.io.*;
import javax.imageio.ImageIO;
import DAO.*;

/**
 *
 * @author prohd
 */
public class PageAccueil extends javax.swing.JFrame {

    private FilmDAO film;
    private int taille;
    private String Synopsis;
    public int client;
    public int id_film;
    private String str;
    byte[] imageFilm = null;
    ResultSet rs;
    PreparedStatement pst;

    PageConnexion pc = new PageConnexion();

    DefaultListModel<String> listModeTitre = new DefaultListModel<>();
    DefaultListModel<String> listModel1 = new DefaultListModel<>();
    DefaultListModel<byte[]> listModel2 = new DefaultListModel<>();
    private boolean connexionValid;
    private boolean IsEmp;

    /**
     * Creates new form PageAccueil
     *
     * @param connexionValid
     * @param Emp
     * @throws java.sql.SQLException
     * @throws java.lang.ClassNotFoundException
     */
    public PageAccueil(boolean connexionValid, boolean Emp) throws SQLException, ClassNotFoundException {
        super("ECE CINEMA, Le meilleur site de reservation de place de cinema  ");
        initComponents();
        BoutonSeancesFilmSelectione.setEnabled(false);
        PanelDescriptionAccueil.setVisible(false);
        //Connection a la bdd
        film = new FilmDAO("cinema", "root", "");
        //on ajoute les titres de films dans la liste
        listModeTitre = film.getFilmTitre();
        TitreFilmsAccueil.setModel(listModeTitre);
        IsEmp = Emp;
        this.connexionValid = connexionValid;


        /*listModel1 = connect.requestDemande(requeteInfo);
        descriptionFilmsAccueil.setModel(listModel1);*/
        //Affichage des boutons de connexion/inscription (ou non si connexion effectu√©)
        affichageBtnCo(connexionValid, IsEmp);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelAccueil = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TitreFilmsAccueil = new javax.swing.JList<>();
        LabelTitreFilmAccueil = new javax.swing.JLabel();
        rechercheAccueilBouton = new javax.swing.JButton();
        barreRechercheAccueil = new javax.swing.JTextField();
        BoutonSeancesFilmSelectione = new javax.swing.JButton();
        PanelDescriptionAccueil = new javax.swing.JPanel();
        descriptionFilmsAccueilText = new javax.swing.JTextPane();
        labelDescriptionFilmAccueil = new javax.swing.JLabel();
        labelImages = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        PanelEmp = new javax.swing.JPanel();
        btnSeances = new javax.swing.JButton();
        btnFilms = new javax.swing.JButton();
        BoutonStatisques = new javax.swing.JButton();
        btnRed = new javax.swing.JButton();
        PanelAccesCpt = new javax.swing.JPanel();
        btnCpt = new javax.swing.JButton();
        PanelCoIns = new javax.swing.JPanel();
        ConnexionBoutonAccueil = new javax.swing.JButton();
        InscriptionBoutonAccueil = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(350, 100, 0, 0));
        setResizable(false);

        PanelAccueil.setBackground(new java.awt.Color(168, 26, 3));
        PanelAccueil.setLayout(null);

        jScrollPane1.setBackground(new java.awt.Color(168, 26, 3));

        TitreFilmsAccueil.setBackground(new java.awt.Color(0, 0, 0));
        TitreFilmsAccueil.setForeground(new java.awt.Color(255, 255, 255));
        TitreFilmsAccueil.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        TitreFilmsAccueil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TitreFilmsAccueilMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                TitreFilmsAccueilMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(TitreFilmsAccueil);
        TitreFilmsAccueil.getAccessibleContext().setAccessibleName("ListefilmsAccueil");
        TitreFilmsAccueil.getAccessibleContext().setAccessibleDescription("affichage des titres des films sur la page accueil");

        PanelAccueil.add(jScrollPane1);
        jScrollPane1.setBounds(20, 180, 351, 609);

        LabelTitreFilmAccueil.setBackground(new java.awt.Color(255, 255, 255));
        LabelTitreFilmAccueil.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        LabelTitreFilmAccueil.setForeground(new java.awt.Color(255, 255, 255));
        LabelTitreFilmAccueil.setText("Liste des Films");
        LabelTitreFilmAccueil.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelAccueil.add(LabelTitreFilmAccueil);
        LabelTitreFilmAccueil.setBounds(120, 150, 160, 25);

        rechercheAccueilBouton.setBackground(new java.awt.Color(0, 0, 0));
        rechercheAccueilBouton.setForeground(new java.awt.Color(168, 26, 3));
        rechercheAccueilBouton.setText("Recherche");
        rechercheAccueilBouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechercheAccueilBoutonActionPerformed(evt);
            }
        });
        PanelAccueil.add(rechercheAccueilBouton);
        rechercheAccueilBouton.setBounds(790, 30, 110, 20);

        barreRechercheAccueil.setBackground(new java.awt.Color(0, 0, 0));
        barreRechercheAccueil.setForeground(new java.awt.Color(255, 255, 255));
        barreRechercheAccueil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                barreRechercheAccueilMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                barreRechercheAccueilMouseExited(evt);
            }
        });
        PanelAccueil.add(barreRechercheAccueil);
        barreRechercheAccueil.setBounds(480, 30, 305, 19);

        BoutonSeancesFilmSelectione.setBackground(new java.awt.Color(0, 0, 0));
        BoutonSeancesFilmSelectione.setText("Seances Disponibles");
        BoutonSeancesFilmSelectione.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonSeancesFilmSelectioneActionPerformed(evt);
            }
        });
        PanelAccueil.add(BoutonSeancesFilmSelectione);
        BoutonSeancesFilmSelectione.setBounds(1100, 760, 150, 40);

        PanelDescriptionAccueil.setBackground(new java.awt.Color(0, 0, 0));
        PanelDescriptionAccueil.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        descriptionFilmsAccueilText.setBackground(new java.awt.Color(0, 0, 0));
        descriptionFilmsAccueilText.setBorder(null);
        descriptionFilmsAccueilText.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        descriptionFilmsAccueilText.setForeground(new java.awt.Color(255, 255, 255));
        descriptionFilmsAccueilText.setMaximumSize(new java.awt.Dimension(6, 22));

        labelDescriptionFilmAccueil.setBackground(new java.awt.Color(255, 255, 255));
        labelDescriptionFilmAccueil.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        labelDescriptionFilmAccueil.setForeground(new java.awt.Color(255, 255, 255));
        labelDescriptionFilmAccueil.setText("Description des films");
        labelDescriptionFilmAccueil.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout PanelDescriptionAccueilLayout = new javax.swing.GroupLayout(PanelDescriptionAccueil);
        PanelDescriptionAccueil.setLayout(PanelDescriptionAccueilLayout);
        PanelDescriptionAccueilLayout.setHorizontalGroup(
            PanelDescriptionAccueilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDescriptionAccueilLayout.createSequentialGroup()
                .addGroup(PanelDescriptionAccueilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descriptionFilmsAccueilText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(PanelDescriptionAccueilLayout.createSequentialGroup()
                        .addGroup(PanelDescriptionAccueilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelDescriptionAccueilLayout.createSequentialGroup()
                                .addGap(138, 138, 138)
                                .addComponent(labelDescriptionFilmAccueil, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelDescriptionAccueilLayout.createSequentialGroup()
                                .addGap(123, 123, 123)
                                .addComponent(labelImages, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 139, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PanelDescriptionAccueilLayout.setVerticalGroup(
            PanelDescriptionAccueilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelDescriptionAccueilLayout.createSequentialGroup()
                .addComponent(labelDescriptionFilmAccueil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(descriptionFilmsAccueilText, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(labelImages, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(279, 279, 279))
        );

        PanelAccueil.add(PanelDescriptionAccueil);
        PanelDescriptionAccueil.setBounds(390, 160, 510, 660);

        PanelEmp.setBackground(new java.awt.Color(0, 0, 0));
        PanelEmp.setLayout(null);

        btnSeances.setBackground(new java.awt.Color(0, 0, 0));
        btnSeances.setForeground(new java.awt.Color(168, 26, 3));
        btnSeances.setText("Gestion Seances");
        btnSeances.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeancesActionPerformed(evt);
            }
        });
        PanelEmp.add(btnSeances);
        btnSeances.setBounds(134, 49, 117, 25);

        btnFilms.setBackground(new java.awt.Color(0, 0, 0));
        btnFilms.setForeground(new java.awt.Color(168, 26, 3));
        btnFilms.setText("Gestion Films");
        btnFilms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilmsActionPerformed(evt);
            }
        });
        PanelEmp.add(btnFilms);
        btnFilms.setBounds(134, 19, 117, 25);

        BoutonStatisques.setBackground(new java.awt.Color(0, 0, 0));
        BoutonStatisques.setForeground(new java.awt.Color(168, 26, 3));
        BoutonStatisques.setText("Statistiques");
        BoutonStatisques.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonStatisquesActionPerformed(evt);
            }
        });
        PanelEmp.add(BoutonStatisques);
        BoutonStatisques.setBounds(12, 19, 117, 25);

        btnRed.setBackground(new java.awt.Color(0, 0, 0));
        btnRed.setForeground(new java.awt.Color(168, 26, 3));
        btnRed.setText("R√©duction");
        btnRed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRedActionPerformed(evt);
            }
        });
        PanelEmp.add(btnRed);
        btnRed.setBounds(12, 49, 117, 25);

        jLayeredPane1.add(PanelEmp);
        PanelEmp.setBounds(70, 0, 260, 90);

        PanelAccesCpt.setBackground(new java.awt.Color(0, 0, 0));
        PanelAccesCpt.setLayout(null);

        btnCpt.setBackground(new java.awt.Color(0, 0, 0));
        btnCpt.setForeground(new java.awt.Color(168, 26, 3));
        btnCpt.setText("Mon Compte");
        btnCpt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCptActionPerformed(evt);
            }
        });
        PanelAccesCpt.add(btnCpt);
        btnCpt.setBounds(30, 10, 123, 25);

        jLayeredPane1.add(PanelAccesCpt);
        PanelAccesCpt.setBounds(100, 20, 180, 50);

        PanelCoIns.setBackground(new java.awt.Color(0, 0, 0));
        PanelCoIns.setLayout(null);

        ConnexionBoutonAccueil.setBackground(new java.awt.Color(0, 0, 0));
        ConnexionBoutonAccueil.setForeground(new java.awt.Color(168, 26, 3));
        ConnexionBoutonAccueil.setText("Connexion");
        ConnexionBoutonAccueil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConnexionBoutonAccueilActionPerformed(evt);
            }
        });
        PanelCoIns.add(ConnexionBoutonAccueil);
        ConnexionBoutonAccueil.setBounds(16, 14, 109, 25);

        InscriptionBoutonAccueil.setBackground(new java.awt.Color(0, 0, 0));
        InscriptionBoutonAccueil.setForeground(new java.awt.Color(168, 26, 3));
        InscriptionBoutonAccueil.setText("Inscription");
        InscriptionBoutonAccueil.setMaximumSize(new java.awt.Dimension(85, 25));
        InscriptionBoutonAccueil.setMinimumSize(new java.awt.Dimension(835, 25));
        InscriptionBoutonAccueil.setPreferredSize(new java.awt.Dimension(85, 25));
        InscriptionBoutonAccueil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InscriptionBoutonAccueilActionPerformed(evt);
            }
        });
        PanelCoIns.add(InscriptionBoutonAccueil);
        InscriptionBoutonAccueil.setBounds(163, 13, 97, 26);

        jLayeredPane1.add(PanelCoIns);
        PanelCoIns.setBounds(80, 10, 280, 60);

        PanelAccueil.add(jLayeredPane1);
        jLayeredPane1.setBounds(880, 0, 410, 520);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Background/PageAccueil.png"))); // NOI18N
        PanelAccueil.add(jLabel1);
        jLabel1.setBounds(0, 0, 1300, 841);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelAccueil, javax.swing.GroupLayout.DEFAULT_SIZE, 1280, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelAccueil, javax.swing.GroupLayout.DEFAULT_SIZE, 876, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Recherche du film 
     * @param evt 
     */
    private void rechercheAccueilBoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechercheAccueilBoutonActionPerformed
        // si la barre de recherche n'est pas vide ou si elle n'est pas = "titre de film", on filtre l'affichage des films
        if (!"titre de film".equals(barreRechercheAccueil.getText())) {
            try {
                listModeTitre = film.getTitreByTitreApprox(barreRechercheAccueil.getText());
                TitreFilmsAccueil.setModel(listModeTitre);
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(PageAccueil.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_rechercheAccueilBoutonActionPerformed

    private void ConnexionBoutonAccueilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConnexionBoutonAccueilActionPerformed
        pc.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ConnexionBoutonAccueilActionPerformed
    /**
     * inscription d'un nouveau client
     * @param evt 
     */
    private void InscriptionBoutonAccueilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InscriptionBoutonAccueilActionPerformed
        //redirection vers la page d'inscription;
        PageInscription pi = null;
        try {
            pi = new PageInscription();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(PageAccueil.class.getName()).log(Level.SEVERE, null, ex);
        }
        pi.setVisible(true);
    }//GEN-LAST:event_InscriptionBoutonAccueilActionPerformed

    private void barreRechercheAccueilMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barreRechercheAccueilMouseClicked
        //si on lcique sur la barre de recherche, elle se vide
        barreRechercheAccueil.setText(null);
    }//GEN-LAST:event_barreRechercheAccueilMouseClicked

    private void barreRechercheAccueilMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barreRechercheAccueilMouseExited
        //si on quitte la barre de recherche alors qu'elle vide, elle reinitialise
        if (barreRechercheAccueil.getText().equals("")) {
            barreRechercheAccueil.setText("titre de film");
        }
    }//GEN-LAST:event_barreRechercheAccueilMouseExited

    private void TitreFilmsAccueilMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TitreFilmsAccueilMouseClicked
        //so la liste n'est pas vide, on affiche le panel des description
        if (TitreFilmsAccueil.getSelectedIndex() > -1) {
            PanelDescriptionAccueil.setVisible(true);
            //si on est un employe le bouton de seances->reservation est inactif
            if (!IsEmp) {
                BoutonSeancesFilmSelectione.setEnabled(true);
            } else {
                BoutonSeancesFilmSelectione.setEnabled(false);
            }
            String textAffich;
            String titreSelectionne = (String) TitreFilmsAccueil.getSelectedValue();

            //en fonction du tire cliqu√©, on affiche les infos de ce film, et en plus, on incr√©mente le nombre de vues de ce film
            try {
                listModel1 = film.getFilmByTitre(titreSelectionne);
                film.majNbVueByTitre(titreSelectionne);
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(PageAccueil.class.getName()).log(Level.SEVERE, null, ex);
            }

            id_film = Integer.parseInt(listModel1.get(9));

            //Reduction de la longueur du synopsis avec des '\n' pour que le panneau ne soit pas trop grand
            taille = listModel1.get(6).length();
            Synopsis = listModel1.get(6);
            StringBuilder str = new StringBuilder(Synopsis);
            for (int i = 1; 70 * i < taille; i++) {
                str.insert(70 * i, '\n');
            }

            //Affichage des infos
            textAffich = "Titre : " + (String) TitreFilmsAccueil.getSelectedValue() + "\nRealisateur : " + listModel1.get(1) + " " + listModel1.get(2) + "\nDuree : " + (String) listModel1.get(3) + "min\ngenre : " + listModel1.get(4) + "\nNote : " + (String) listModel1.get(5) + "\nSynopsis : \n" + str;
            descriptionFilmsAccueilText.setText(textAffich);

            String path = listModel1.get(7);
            ////////////////////
            //affichage d'une image stock√©e avec son chemin dans la bdd des films
            //code imspir√© de la video youtube https://www.youtube.com/watch?v=oxT2G4gxsxc de Indra Subedi 
            if (!"".equals(path)) {

                ImageIcon ii = new ImageIcon(path);
                Image im = ii.getImage().getScaledInstance(labelImages.getWidth(), labelImages.getHeight(), Image.SCALE_SMOOTH);
                labelImages.setIcon(new ImageIcon(im));
                try {
                    File image = new File(path);
                    FileInputStream fis = new FileInputStream(image);
                    ByteArrayOutputStream bos = new ByteArrayOutputStream();
                    byte[] buf = new byte[1024];
                    for (int readNum; (readNum = fis.read(buf)) != -1;) {
                        bos.write(buf, 0, readNum);
                    }
                    imageFilm = bos.toByteArray();
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            }

        }
    }//GEN-LAST:event_TitreFilmsAccueilMouseClicked

    private void TitreFilmsAccueilMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TitreFilmsAccueilMouseReleased
        //si on ne clique plus sur un titre de film, la description disparait
        PanelDescriptionAccueil.setVisible(false);
        //BoutonSeancesFilmSelectione.setEnabled(false);
        descriptionFilmsAccueilText.setText("");
    }//GEN-LAST:event_TitreFilmsAccueilMouseReleased

    private void BoutonSeancesFilmSelectioneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonSeancesFilmSelectioneActionPerformed
        //si on appuie sur le bouton seance, √ßa ouvre une page avec la liste des seances qui ont le meme id que le film selectionn√©
        PageSeance pse;
        try {
            pse = new PageSeance(id_film, client, connexionValid);
            pse.setVisible(true);
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(PageAccueil.class.getName()).log(Level.SEVERE, null, ex);
        }
        //on ferme la page d'accueil par la meme occasion
        this.dispose();
    }//GEN-LAST:event_BoutonSeancesFilmSelectioneActionPerformed

    private void btnCptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCptActionPerformed
        //si on appuie sur le bouton compte, √ßa ouvre une page avec la liste des historique d'acht du client
        PageHistoFact ph;
        try {
            ph = new PageHistoFact(connexionValid, client);
            ph.setVisible(true);
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(PageAccueil.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCptActionPerformed

    private void btnSeancesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeancesActionPerformed
        //si on appuie sur le bouton gestion des seances, √ßa ouvre une page avec le menu de gestion des seances(exlusif aux employes)
        try {
            GestiondeSeance gs = new GestiondeSeance();
            gs.setVisible(true);
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(PageAccueil.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSeancesActionPerformed

    private void btnFilmsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilmsActionPerformed
        //si on appuie sur le bouton gestion des films, √ßa ouvre une page avec le menu de gestion des films(exlusif aux employes)
        try {
            PageSuppression ps = new PageSuppression();
            ps.setVisible(true);
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(PageAccueil.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnFilmsActionPerformed

    private void BoutonStatisquesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonStatisquesActionPerformed
         //si on appuie sur le bouton statistiques, √ßa ouvre une page avec  un graph de la popularite des films(exlusif aux employes)
        PageStats pStats = null;
        try {
            pStats = new PageStats();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(PageAccueil.class.getName()).log(Level.SEVERE, null, ex);
        }
        pStats.setVisible(true);
    }//GEN-LAST:event_BoutonStatisquesActionPerformed

    private void btnRedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRedActionPerformed
         //si on appuie sur le bouton reductions, √ßa ouvre une page avec le menu de gestion des reductions(exlusif aux employes)
        PageReduction pr;
        try {
            pr = new PageReduction();
            pr.setVisible(true);
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(PageAccueil.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRedActionPerformed

    public void affichageBtnCo(boolean COk, boolean Emp) {
        //en fonction de la connection et du status du connect√©, des panels apparaissent et/ou disparaissent
        if (COk) {
            if (Emp) {
                PanelAccesCpt.setVisible(false);
                PanelCoIns.setVisible(false);
                PanelEmp.setVisible(true);
                BoutonSeancesFilmSelectione.setEnabled(false);
            } else {
                PanelAccesCpt.setVisible(true);
                PanelCoIns.setVisible(false);
                PanelEmp.setVisible(false);
            }
        } else {
            PanelAccesCpt.setVisible(false);
            PanelCoIns.setVisible(true);
            PanelEmp.setVisible(false);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BoutonSeancesFilmSelectione;
    private javax.swing.JButton BoutonStatisques;
    private javax.swing.JButton ConnexionBoutonAccueil;
    private javax.swing.JButton InscriptionBoutonAccueil;
    private javax.swing.JLabel LabelTitreFilmAccueil;
    private javax.swing.JPanel PanelAccesCpt;
    private javax.swing.JPanel PanelAccueil;
    private javax.swing.JPanel PanelCoIns;
    private javax.swing.JPanel PanelDescriptionAccueil;
    private javax.swing.JPanel PanelEmp;
    private javax.swing.JList<String> TitreFilmsAccueil;
    private javax.swing.JTextField barreRechercheAccueil;
    private javax.swing.JButton btnCpt;
    private javax.swing.JButton btnFilms;
    private javax.swing.JButton btnRed;
    private javax.swing.JButton btnSeances;
    private javax.swing.JTextPane descriptionFilmsAccueilText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelDescriptionFilmAccueil;
    private javax.swing.JLabel labelImages;
    private javax.swing.JButton rechercheAccueilBouton;
    // End of variables declaration//GEN-END:variables
}
