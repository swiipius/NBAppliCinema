/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vue;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javax.management.remote.JMXConnectorFactory.connect;
import javax.swing.*;
import jdbc2020.*;

/**
 *
 * @author user
 */
public class GestiondeSeance extends javax.swing.JFrame {
    public Connexion connection;
    private String maRequete;
    private int count = 0;
    DefaultListModel<String> listModel1 = new DefaultListModel<>();
    /**
     * Creates new form GestiondeSeance
     * @throws java.sql.SQLException
     * @throws java.lang.ClassNotFoundException
     */
    public GestiondeSeance() throws SQLException, ClassNotFoundException {
        super("Gestion des seances");
        initComponents();
        
        connection = new Connexion("Cinema", "root", "");
        maRequete = "SELECT date FROM seance";
        listModel1 = connection.requestDemande(maRequete);
        ListeSeance.setModel(listModel1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        BtnRecherche = new javax.swing.JButton();
        BtnReset = new javax.swing.JButton();
        RechercheSeance = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        DateSeance = new javax.swing.JTextField();
        NomFilm = new javax.swing.JTextField();
        HeureDebut = new javax.swing.JTextField();
        SalleProjection = new javax.swing.JTextField();
        BtnAjouter = new javax.swing.JButton();
        BtnSupprimer = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListeSeance = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BtnRecherche.setText("Recherche");
        BtnRecherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRechercheActionPerformed(evt);
            }
        });

        BtnReset.setText("Reset");
        BtnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnResetActionPerformed(evt);
            }
        });

        RechercheSeance.setText("Recherche de la seance");
        RechercheSeance.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RechercheSeanceMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                RechercheSeanceMouseExited(evt);
            }
        });

        jLabel1.setText("Gestion des Seances");

        DateSeance.setText("Date de la seance");
        DateSeance.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DateSeanceMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DateSeanceMouseExited(evt);
            }
        });
        DateSeance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateSeanceActionPerformed(evt);
            }
        });

        NomFilm.setText("Nom du film");
        NomFilm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NomFilmMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                NomFilmMouseExited(evt);
            }
        });

        HeureDebut.setText("Heure de Debut");
        HeureDebut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HeureDebutMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                HeureDebutMouseExited(evt);
            }
        });

        SalleProjection.setText("Salle de projection");
        SalleProjection.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SalleProjectionMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SalleProjectionMouseExited(evt);
            }
        });

        BtnAjouter.setText("AJOUTER");
        BtnAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAjouterActionPerformed(evt);
            }
        });

        BtnSupprimer.setText("SUPPRIMER");
        BtnSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSupprimerActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(ListeSeance);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(BtnAjouter, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                                .addComponent(BtnSupprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(HeureDebut, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(SalleProjection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(DateSeance, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(NomFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(111, 111, 111)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(RechercheSeance, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BtnRecherche, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(BtnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(RechercheSeance)
                        .addComponent(BtnRecherche, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BtnReset, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NomFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DateSeance, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(79, 79, 79)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(HeureDebut, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SalleProjection, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(93, 93, 93)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BtnAjouter, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BtnSupprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSupprimerActionPerformed
        // TODO add your handling code here:
        String Selecteddate = (String) ListeSeance.getSelectedValue();//Capture de l'element selectionne
        int index = ListeSeance.getSelectedIndex();
        //Creer et execute la requete sql pour obtenir les 
        String requeteInfo = "SELECT heureDebut,salle FROM seance WHERE date LIKE '" + Selecteddate + "'";
        DefaultListModel<String> eltRech = new DefaultListModel<>();
        try {
            eltRech = connection.requestDemande(requeteInfo);
        } catch (SQLException ex) {
            Logger.getLogger(PageSuppression.class.getName()).log(Level.SEVERE, null, ex);
        }

        String textAffich = "Voulez vous supprimer cette seance ?\n" + Selecteddate + "\n" + eltRech.get(1) + ", " + eltRech.get(0);
        int result = JOptionPane.showConfirmDialog(null, textAffich, "Suppression", JOptionPane.YES_NO_OPTION);

        if (result == JOptionPane.YES_OPTION) {
            listModel1.removeElementAt(index);
            String requeteSuppr = "DELETE FROM seance WHERE date LIKE '" + Selecteddate + "' AND heureDebut LIKE '" + eltRech.get(1) + "'";
            try {
                connection.executeUpdate(requeteSuppr);
            } catch (SQLException ex) {
                Logger.getLogger(PageSuppression.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "seance Supprime");
        } else {

        }                   
    }//GEN-LAST:event_BtnSupprimerActionPerformed

    private void BtnAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAjouterActionPerformed
        if((DateSeance.getText().equals(""))||(DateSeance.getText().equals("Date de la seance"))||(NomFilm.getText().equals(""))||(NomFilm.getText().equals("Nom du Film"))||(HeureDebut.getText().equals(""))||(HeureDebut.getText().equals("Heure de Debut"))||(SalleProjection.getText().equals(""))||(SalleProjection.getText().equals("Salle de Projection"))){
            JOptionPane.showMessageDialog(null, "Veuillez completer tout les champs");
        }else{
            String maRequete = "INSERT INTO seance(Heure de Debut,Nom du Film,Salle de Projection,Date de la seance,Affiche) VALUES('" + HeureDebut.getText() + "','" + NomFilm.getText() + "','" + SalleProjection.getText() + "','" + DateSeance.getText()+ "'" ;
            try {
                connection.executeUpdate(maRequete);
            } catch (SQLException ex) {
                Logger.getLogger(GestiondeSeance.class.getName()).log(Level.SEVERE, null, ex);
            }
            listModel1.addElement(DateSeance.getText());
            JOptionPane.showMessageDialog(null, "La seance a ete ajoute");
            DateSeance.setText("Date de la Seance");
            HeureDebut.setText("Heure de Debut");
            NomFilm.setText("Nom du Film");
            SalleProjection.setText("Salle de Projection");
        }
    }//GEN-LAST:event_BtnAjouterActionPerformed

    private void DateSeanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateSeanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DateSeanceActionPerformed

    private void RechercheSeanceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RechercheSeanceMouseClicked
        // TODO add your handling code here:
        if (RechercheSeance.getText().equals("Recherche de la seance")){
            RechercheSeance.setText(null);
        }
    }//GEN-LAST:event_RechercheSeanceMouseClicked

    private void RechercheSeanceMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RechercheSeanceMouseExited
        // TODO add your handling code here:
        if (RechercheSeance.getText().equals("")) {
            RechercheSeance.setText("Recherche de la seance");
        }
    }//GEN-LAST:event_RechercheSeanceMouseExited

    private void DateSeanceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DateSeanceMouseClicked
        // TODO add your handling code here:
        if (DateSeance.getText().equals("Date de la seance")){
            DateSeance.setText(null);
        }
    }//GEN-LAST:event_DateSeanceMouseClicked

    private void DateSeanceMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DateSeanceMouseExited
        // TODO add your handling code here:
        if (DateSeance.getText().equals("")) {
            DateSeance.setText("Date de la seance");
        }
    }//GEN-LAST:event_DateSeanceMouseExited

    private void NomFilmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NomFilmMouseClicked
        // TODO add your handling code here:
        if (NomFilm.getText().equals("Nom du film")){
            NomFilm.setText(null);
        }
    }//GEN-LAST:event_NomFilmMouseClicked

    private void NomFilmMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NomFilmMouseExited
        // TODO add your handling code here:
        if (NomFilm.getText().equals("")) {
            NomFilm.setText("Nom du film");
        }
    }//GEN-LAST:event_NomFilmMouseExited

    private void HeureDebutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeureDebutMouseClicked
        // TODO add your handling code here:
        if (HeureDebut.getText().equals("Heure de Debut")){
            HeureDebut.setText(null);
        }
    }//GEN-LAST:event_HeureDebutMouseClicked

    private void HeureDebutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeureDebutMouseExited
        // TODO add your handling code here:
        if (HeureDebut.getText().equals("")) {
            HeureDebut.setText("Heure de Debut");
        }
    }//GEN-LAST:event_HeureDebutMouseExited

    private void SalleProjectionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SalleProjectionMouseClicked
        // TODO add your handling code here:
        if (SalleProjection.getText().equals("Salle de projection")){
            SalleProjection.setText(null);
        }
    }//GEN-LAST:event_SalleProjectionMouseClicked

    private void SalleProjectionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SalleProjectionMouseExited
        // TODO add your handling code here:
        if (SalleProjection.getText().equals("")) {
            SalleProjection.setText("Salle de projection");
        }
    }//GEN-LAST:event_SalleProjectionMouseExited

    private void BtnRechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRechercheActionPerformed
        // TODO add your handling code here:
        if ((RechercheSeance.getText().equals("")) || (DateSeance.getText().equals("Recherche de la seance"))) {
            JOptionPane.showMessageDialog(null, "Veuillez rentrer une date à chercher");
        } else {
            String MaRequete = "SELECT date FROM seance WHERE date = '" + RechercheSeance.getText() + "'";
            try {
                listModel1 = connection.requestDemande(maRequete);
            } catch (SQLException ex) {
                Logger.getLogger(PageSuppression.class.getName()).log(Level.SEVERE, null, ex);
            }
            ListeSeance.setModel(listModel1);
            //RechercheSeance.setText("Recherche de la seance ");
        }
    }//GEN-LAST:event_BtnRechercheActionPerformed

    private void BtnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnResetActionPerformed
        // TODO add your handling code here:
        String Marequete = "SELECT date FROM seance";
        try {
            listModel1 = connection.requestDemande(Marequete);
        } catch (SQLException ex) {
            Logger.getLogger(PageSuppression.class.getName()).log(Level.SEVERE, null, ex);
        }
        ListeSeance.setModel(listModel1);
        
    }//GEN-LAST:event_BtnResetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestiondeSeance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestiondeSeance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestiondeSeance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestiondeSeance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new GestiondeSeance().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(GestiondeSeance.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(GestiondeSeance.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAjouter;
    private javax.swing.JButton BtnRecherche;
    private javax.swing.JButton BtnReset;
    private javax.swing.JButton BtnSupprimer;
    private javax.swing.JTextField DateSeance;
    private javax.swing.JTextField HeureDebut;
    private javax.swing.JList<String> ListeSeance;
    private javax.swing.JTextField NomFilm;
    private javax.swing.JTextField RechercheSeance;
    private javax.swing.JTextField SalleProjection;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
