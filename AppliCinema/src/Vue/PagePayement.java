/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vue;

import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.time.*;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author pierr
 */
public class PagePayement extends javax.swing.JFrame {

    private final boolean connexionValid;
    private boolean Emp;

    /**
     * Creates new form PagePayement
     * @param connexionValid
     */
    public PagePayement(boolean connexionValid) {
        initComponents();
        this.connexionValid = connexionValid;
        this.Emp = Emp;
    }

    private int countCrypto = 0;
    private int countNum = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        NumCarte = new javax.swing.JTextField();
        Crypto = new javax.swing.JTextField();
        Nom = new javax.swing.JTextField();
        btnValid = new javax.swing.JButton();
        Date = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(600, 300, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        NumCarte.setText("Numero de la carte");
        NumCarte.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NumCarteMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                NumCarteMouseExited(evt);
            }
        });
        NumCarte.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                NumCarteKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                NumCarteKeyTyped(evt);
            }
        });

        Crypto.setText("Cryptogramme");
        Crypto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CryptoMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CryptoMouseExited(evt);
            }
        });
        Crypto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CryptoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CryptoKeyTyped(evt);
            }
        });

        Nom.setText("Nom sur la  carte");
        Nom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NomMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                NomMouseExited(evt);
            }
        });
        Nom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomActionPerformed(evt);
            }
        });

        btnValid.setText("Valider");
        btnValid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValidActionPerformed(evt);
            }
        });

        try {
            Date.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("## / ##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        Date.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Date.setToolTipText("");

        jLabel1.setText("Date d'expiration");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(274, 274, 274)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(NumCarte, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(Date, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(82, 82, 82)
                                .addComponent(Crypto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Nom)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(363, 363, 363)
                        .addComponent(btnValid)))
                .addContainerGap(274, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(Nom, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(NumCarte, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Date))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(Crypto, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(68, 68, 68)
                .addComponent(btnValid, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(119, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NomMouseClicked
        Nom.setText(null);
    }//GEN-LAST:event_NomMouseClicked

    private void NomMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NomMouseExited
        if (Nom.getText().equals("")) {
            Nom.setText("Nom sur la carte");
        }
    }//GEN-LAST:event_NomMouseExited

    private void NumCarteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NumCarteMouseClicked
        NumCarte.setText(null);
    }//GEN-LAST:event_NumCarteMouseClicked

    private void NumCarteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NumCarteMouseExited
        if (NumCarte.getText().equals("")) {
            NumCarte.setText("Num√©ro de la carte");
        }    }//GEN-LAST:event_NumCarteMouseExited

    private void CryptoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CryptoMouseClicked
        Crypto.setText(null);
    }//GEN-LAST:event_CryptoMouseClicked

    private void CryptoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CryptoMouseExited
        if (Crypto.getText().equals("")) {
            Crypto.setText("Cryptogramme");
        }    }//GEN-LAST:event_CryptoMouseExited

    private void CryptoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CryptoKeyTyped
        char c = evt.getKeyChar();
        if (countCrypto <= 3) {
            if (!Character.isDigit(c)) {
                evt.consume();
            }
        } else {
            evt.consume();
        }
    }//GEN-LAST:event_CryptoKeyTyped

    private void CryptoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CryptoKeyPressed
        char c = evt.getKeyChar();
        if((evt.getKeyCode()==8)&&(countCrypto < 4)){
            countCrypto--;
        }
        else if((evt.getKeyCode()==8)&&(countCrypto == 4)){
            countCrypto -= 2;
        }
        else if((Character.isDigit(c))&&(4>countCrypto)){
            countCrypto ++;
        }
    }//GEN-LAST:event_CryptoKeyPressed

    private void NumCarteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NumCarteKeyPressed
        char c = evt.getKeyChar();
        if((evt.getKeyCode()==8)&&(countNum < 17)){
            countNum--;
        }
        else if((evt.getKeyCode()==8)&&(countNum == 17)){
            countNum -= 2;
        }
        else if((Character.isDigit(c))&&(17>countNum)){
            countNum ++;
        }
    }//GEN-LAST:event_NumCarteKeyPressed

    private void NumCarteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NumCarteKeyTyped
        char c = evt.getKeyChar();
        if (countNum <= 16) {
            if (!Character.isDigit(c)) {
                evt.consume();
            }
        } else {
            evt.consume();
        }
    }//GEN-LAST:event_NumCarteKeyTyped

    private void btnValidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValidActionPerformed
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("MM / yy");  
        LocalDateTime now = LocalDateTime.now();
        //System.out.println(dtf.format(now).compareTo(Date.getText()));
        //Verification que toutes les infos ont √©t√© rentr√©
        if((NumCarte.getText().equals("Numero de la carte"))||(Nom.getText().equals("Nom sur la  carte"))||(Crypto.getText().equals("Cryptogramme"))||(Date.getText().equals("   /   "))){
            JOptionPane.showMessageDialog(null, "Veuillez remplir tous les champs");
        }
        //Verification de la taille
        else if(NumCarte.getText().length()<16){
            JOptionPane.showMessageDialog(null, "Veuillez remplir tous les champs");
            NumCarte.setText(null);
            countNum = 0;
        }
        else if(Crypto.getText().length()<3){
            JOptionPane.showMessageDialog(null, "Veuillez remplir tous les champs");
            Crypto.setText(null);
            countCrypto = 0;
        }
        //verication de la validit√©
        else if((dtf.format(now).compareTo(Date.getText()))==-1){
            JOptionPane.showMessageDialog(null, "Carte p√©rim√©e");
            Date.setText(null);
        }
        else{
            JOptionPane.showMessageDialog(null, "Paiement Valid√©");
            this.dispose();
            try {
                PageAccueil p = new PageAccueil(connexionValid, Emp);
                p.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(PagePayement.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(PagePayement.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnValidActionPerformed

    private void NomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NomActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Crypto;
    private javax.swing.JFormattedTextField Date;
    private javax.swing.JTextField Nom;
    private javax.swing.JTextField NumCarte;
    private javax.swing.JButton btnValid;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
